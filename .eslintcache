[{"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/index.js":"1","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/App.js":"2","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/store.js":"3","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/router/index.js":"4","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/reducers/index.js":"5","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/actions/index.js":"6","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/loadingbar.jsx":"7","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Auth/index.jsx":"8","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/utils.js":"9","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/services/index.js":"10","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/callApi.js":"11","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/index.jsx":"12","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/Conversations.jsx":"13","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/ChatBox.jsx":"14","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Element.jsx":"15","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Editor.jsx":"16","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/services/chat.js":"17","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/Users.jsx":"18"},{"size":507,"mtime":1620661275516,"results":"19","hashOfConfig":"20"},{"size":191,"mtime":1620369562401,"results":"21","hashOfConfig":"20"},{"size":747,"mtime":1620661378769,"results":"22","hashOfConfig":"20"},{"size":1739,"mtime":1620660792709,"results":"23","hashOfConfig":"20"},{"size":880,"mtime":1620369562401,"results":"24","hashOfConfig":"20"},{"size":329,"mtime":1620369562401,"results":"25","hashOfConfig":"20"},{"size":351,"mtime":1620802956068,"results":"26","hashOfConfig":"20"},{"size":4944,"mtime":1620660717393,"results":"27","hashOfConfig":"20"},{"size":1621,"mtime":1620805301412,"results":"28","hashOfConfig":"20"},{"size":2679,"mtime":1620787905369,"results":"29","hashOfConfig":"20"},{"size":4302,"mtime":1620805038424,"results":"30","hashOfConfig":"20"},{"size":1022,"mtime":1620803245064,"results":"31","hashOfConfig":"20"},{"size":4971,"mtime":1620809685994,"results":"32","hashOfConfig":"20"},{"size":811,"mtime":1620543784702,"results":"33","hashOfConfig":"34"},{"size":404,"mtime":1620802188380,"results":"35","hashOfConfig":"20"},{"size":2403,"mtime":1620528297002,"results":"36","hashOfConfig":"34"},{"size":1178,"mtime":1620805046808,"results":"37","hashOfConfig":"20"},{"size":1247,"mtime":1620551370087,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ogyx92",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3j80vq",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/App.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/store.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/router/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/reducers/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/actions/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/loadingbar.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Auth/index.jsx",["80"],"import React, { useState } from \"react\";\nimport githubIcon from \"./github.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { validateValue } from \"container/common/utils\";\nimport { loginService, signUpService } from \"redux/services\";\nimport { useHistory, useParams } from \"react-router\";\nconst AuthScreen = () => {\n  const [userInfo, setUserInfo] = useState({\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [verify, setVerify] = useState({\n    email: false,\n    password: false,\n  });\n  const [errMess, setErrMess] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { type, from } = useParams();\n  const handleChange = (event) => {\n    setUserInfo({\n      ...userInfo,\n      [event.target.name]: event.target.value,\n    });\n    checkVerify(event);\n  };\n  const submitAuth = (e) => {\n    e.preventDefault();\n    let body = {\n      email: userInfo.email,\n      password: userInfo.password,\n      callback: (success) => {\n        if (success === true) {\n          if (from) {\n            history.push(`/forum/${from}`);\n          } else {\n            history.push(\"/chatroom\");\n          }\n        } else {\n          setErrMess(success);\n        }\n      },\n    };\n    if (type === \"sign-in\") {\n      dispatch(loginService(body));\n    } else if (type === \"sign-up\") {\n      body.last_name = userInfo.lastName;\n      body.first_name = userInfo.firstName;\n      dispatch(signUpService(body));\n    }\n  };\n  const checkVerify = (event) => {\n    let test = validateValue(event.target.value, event.target.name);\n    setVerify({\n      ...verify,\n      [event.target.name]: test,\n    });\n  };\n  return (\n    <div className=\"cs-auth\">\n      <h2>CS Technology</h2>\n      <div className=\"container\" id=\"container\">\n        <div\n          className=\"form-container sign-in-container\"\n          hidden={type === \"sign-in\"}\n        >\n          <form>\n            <h1>Create Account</h1>\n            <div className=\"social-container\">\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n            </div>\n            <span>or use your email for registration</span>\n            <input type=\"text\" placeholder=\"Name\" />\n            <input type=\"email\" placeholder=\"Email\" />\n            <input type=\"password\" placeholder=\"Password\" />\n            <button>Sign Up</button>\n          </form>\n        </div>\n        <div\n          className=\"form-container sign-in-container\"\n          hidden={type === \"sign-up\"}\n        >\n          <form>\n            <h1>Sign in</h1>\n            <div className=\"social-container\">\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n            </div>\n            <span>or use your account</span>\n            <input\n              type=\"email\"\n              placeholder=\"Email\"\n              value={userInfo.email}\n              onChange={handleChange}\n              name=\"email\"\n            />\n            <input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={userInfo.password}\n              onChange={handleChange}\n            />\n            <a href=\"/\">Forgot your password?</a>\n            <button onClick={submitAuth}>Sign In</button>\n          </form>\n        </div>\n        <div className=\"overlay-container\">\n          <div className=\"overlay\">\n            {type === \"sign-in\" ? (\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Hello, Friend!</h1>\n                <p>Enter your personal details and start journey with us</p>\n                <button\n                  className=\"ghost\"\n                  id=\"signUp\"\n                  onClick={() => history.push(\"/auth/sign-up\")}\n                >\n                  Sign Up\n                </button>\n              </div>\n            ) : (\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Welcome Back!</h1>\n                <p>\n                  To keep connected with us please login with your personal info\n                </p>\n                <button\n                  className=\"ghost\"\n                  id=\"signIn\"\n                  onClick={() => history.push(\"/auth/sign-in\")}\n                >\n                  Sign In\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthScreen;\n","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/utils.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/services/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/callApi.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/index.jsx",["81"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getUserService } from \"redux/services/chat\";\nimport Conversations from \"./components/Conversations\";\nimport UsersList from \"./components/Users\";\n\nconst ChatZone = () => {\n  const [users, setUsers] = useState();\n  const [conversation, setConversation] = useState(\"general\");\n\n  useEffect(() => {\n    var objDiv = document.getElementById(\"chat-box-contain\");\n    objDiv.scrollTop = objDiv.scrollHeight;\n  }, []);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(\n      getUserService({\n        callback: (res, err) => {\n          if (!err) {\n            setUsers(res);\n          }\n        },\n      })\n    );\n  }, []);\n\n  const handleUser = (user) => {\n    setConversation(user);\n  };\n\n  return (\n    <div className=\"cs-chatroom\" id=\"cs-chatroom\">\n      <UsersList users={users} handleUser={handleUser} />\n      <Conversations conversation={conversation} />\n    </div>\n  );\n};\n\nexport default ChatZone;\n","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/Conversations.jsx",["82"],"import { TextareaAutosize } from \"@material-ui/core\";\nimport { convertTime } from \"container/common/utils\";\nimport { LoadingSpin } from \"container/layout/Element\";\nimport { EmojiPickerMemo } from \"container/layout/Element\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getMessService, sendMessService } from \"redux/services/chat\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://127.0.0.1:5000\";\n\nconst Conversations = ({ conversation }) => {\n  const [listMess, setListMess] = useState([]);\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT);\n    socket.on(\"connect\", (res) => console.log(\"hello server\", res));\n    socket.emit('message', \"message\");\n  }, []);\n\n  const handleEmoji = () => {\n    setShowEmoji(() => !showEmoji);\n  };\n  const pickEmoji = async (e) => {\n    let sym = e.unified.split(\"-\");\n    let codesArray = [];\n    sym.forEach((el) => codesArray.push(\"0x\" + el));\n    let emoji = String.fromCodePoint(...codesArray);\n    setMessage(() => message + emoji);\n  };\n  useEffect(() => {\n    if (showEmoji) {\n      document\n        .querySelector(\".cs-chatroom\")\n        .addEventListener(\"click\", (event) => {\n          const parent = document.querySelector(\".emoji-mart\");\n          if (showEmoji && !parent.contains(event.target)) {\n            setShowEmoji(false);\n          }\n        });\n    }\n  }, [showEmoji]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setListMess([]);\n    dispatch(\n      getMessService({\n        id: conversation._id,\n        callback: (res, err) => {\n          if (!err) {\n            setListMess(res.messages);\n            console.log(res);\n            console.log(res.messages);\n          }\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversation._id]);\n  const sendMess = () => {\n    dispatch(\n      sendMessService({\n        to: conversation._id,\n        text: message,\n        callback: (res, err) => {\n          if (!err) {\n            setListMess(res.messages);\n            setMessage(\"\");\n          }\n        },\n      })\n    );\n  };\n  const handleType = (e) => {\n    setMessage(e.target.value);\n  };\n  const handleKeyEvent = (event) => {\n    if (event.key === \"Enter\") {\n      if (event.shiftKey) {\n        setMessage(message + \"\\n\");\n      } else {\n        event.preventDefault();\n        sendMess();\n      }\n    }\n  };\n  const groupTime = () => {};\n  const isLoading = useSelector((state) => state.isLoading);\n  return (\n    <div className=\"cs-chat-right\">\n      {/* {JSON.stringify(listMess)} */}\n      <div className=\"cs-chat-box-head\">\n        {conversation === \"general\" ? (\n          <div>\n            <h5>#GENERAL</h5>\n          </div>\n        ) : (\n          <div>\n            <div className=\"cs-avt\">\n              <span>CS</span>\n            </div>\n            <h5>{conversation.lastname + \" \" + conversation.firstname}</h5>\n            <span className=\"cs-avt-status\"></span>\n          </div>\n        )}\n        <div className=\"cs-chat-icons-tool\">\n          <i className=\"fi-rr-search\"></i>\n          <i className=\"fi-rr-video-camera\"></i>\n          <i className=\"fi-rr-user\"></i>\n          <i className=\"fi-rr-menu-dots\"></i>\n        </div>\n      </div>\n      <div className=\"cs-chat-box-contain \" id=\"chat-box-contain\">\n        {/* <div className={`cs-avt ${i % 3 === 0 ? \" cs-hidden-avt\" : \"\"}`}> */}\n        {isLoading ? (\n          <LoadingSpin />\n        ) : (\n          listMess.map((i) => (\n            <div\n              className={`cs-message ${\n                i.to === conversation._id ? \" cs-m-end\" : \"\"\n              }`}\n            >\n              <div className={`cs-avt`}>\n                <span>CS</span>\n              </div>\n              <div>\n                <p style={{ whiteSpace: \"pre-line\" }}>{i.text}</p>\n                <i>{convertTime(i?.date)}</i>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n      <div className=\"cs-chat-box-type cs-chat-box-head\">\n        <div>\n          <TextareaAutosize\n            aria-label=\"empty textarea\"\n            placeholder=\"Enter message...\"\n            value={message}\n            onChange={handleType}\n            onKeyPress={handleKeyEvent}\n            // onKeyDown={sendMess}\n          />\n        </div>\n        <div className=\"cs-chat-icons-tool\">\n          <i style={{ fontStyle: \"normal\" }} onClick={handleEmoji}>\n            🙂\n          </i>\n          <i className=\"fi-rr-picture\"></i>\n          <i className=\"fi-rr-clip\"></i>\n          <button onClick={sendMess}>\n            <i className=\"fi-rr-paper-plane\"></i>\n          </button>\n        </div>\n      </div>\n      <div className=\"cs-emoji-list\" hidden={!showEmoji}>\n        <EmojiPickerMemo onClick={pickEmoji} />\n      </div>\n    </div>\n  );\n};\n\nexport default Conversations;\n","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/ChatBox.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Element.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Editor.jsx",["83"],"import React, { useRef, useState } from \"react\";\nimport { AtomicBlockUtils, Editor, EditorState } from \"draft-js\";\nimport { RichUtils } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nfunction CSEditor() {\n  const editorRef = useRef();\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const focus = () => {\n    editorRef.current.focus();\n  };\n  const onBoldClick = (e) => {\n    e.preventDefault(); // Mình dùng preventDefault() để giữ con trỏ chuột vẫn còn ở trong editor nhé các bạn\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"BOLD\"));\n  };\n  const addImage = (e) => {\n    e.preventDefault();\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      \"image\",\n      \"IMMUTABLE\",\n      {\n        src:\n          \"https://scontent.fhan3-1.fna.fbcdn.net/v/t1.6435-9/56907659_393365341245567_78934828816269312_n.jpg?_nc_cat=109&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=OhJYeQMwLewAX8OikWm&_nc_ht=scontent.fhan3-1.fna&oh=4a8097bdfcd522dff035ce6983af527c&oe=60BC6747\",\n      }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n    setEditorState(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n  };\n\n  // Tiến hành render Image component trong editor\n  const Image = ({ contentState, block }) => {\n    const entity = contentState.getEntity(block.getEntityAt(0));\n    const { src } = entity.getData();\n    console.log(src);\n    return <img src={src} />;\n  };\n\n  function mediaBlockRenderer(block) {\n    if (block.getType() === \"atomic\") {\n      return {\n        component: Image,\n        editable: false,\n      };\n    }\n\n    return null;\n  }\n  return (\n    <div className=\"cs-editor\" onClick={focus}>\n      <span onMouseDown={onBoldClick}>Bold</span>\n      <button onClick={addImage}>img</button>\n      <Editor\n        blockRendererFn={mediaBlockRenderer}\n        ref={editorRef}\n        editorState={editorState}\n        onChange={setEditorState}\n      />\n      <div className=\"cs-editor-tool\">\n      <i class=\"fi-rr-bold\"></i>\n      <i class=\"fi-rr-italic\"></i>\n      <i class=\"fi-rr-underline\"></i>\n      <i class=\"fi-rr-list\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default CSEditor;\n",["84","85"],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/services/chat.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/Users.jsx",[],{"ruleId":"86","severity":1,"message":"87","line":18,"column":10,"nodeType":"88","messageId":"89","endLine":18,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":26,"column":6,"nodeType":"92","endLine":26,"endColumn":8,"suggestions":"93"},{"ruleId":"86","severity":1,"message":"94","line":88,"column":9,"nodeType":"88","messageId":"89","endLine":88,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":42,"column":12,"nodeType":"97","endLine":42,"endColumn":29},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},"no-unused-vars","'errMess' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'groupTime' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["103"],"no-negated-in-lhs",["104"],{"desc":"105","fix":"106"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"107","text":"108"},[733,735],"[dispatch]"]