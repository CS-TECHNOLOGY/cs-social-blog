[{"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/index.js":"1","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/App.js":"2","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/store.js":"3","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/router/index.js":"4","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/reducers/index.js":"5","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/actions/index.js":"6","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/loadingbar.jsx":"7","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Auth/index.jsx":"8","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/utils.js":"9","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/services/index.js":"10","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/callApi.js":"11","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/index.jsx":"12","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/Conversations.jsx":"13","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/User.jsx":"14","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/ChatBox.jsx":"15","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Element.jsx":"16","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Editor.jsx":"17"},{"size":368,"mtime":1620528314354,"results":"18","hashOfConfig":"19"},{"size":191,"mtime":1620369562401,"results":"20","hashOfConfig":"19"},{"size":331,"mtime":1620369562401,"results":"21","hashOfConfig":"19"},{"size":1730,"mtime":1620466422467,"results":"22","hashOfConfig":"19"},{"size":880,"mtime":1620369562401,"results":"23","hashOfConfig":"19"},{"size":329,"mtime":1620369562401,"results":"24","hashOfConfig":"19"},{"size":351,"mtime":1620369562401,"results":"25","hashOfConfig":"19"},{"size":4633,"mtime":1620376806004,"results":"26","hashOfConfig":"19"},{"size":1148,"mtime":1620477812735,"results":"27","hashOfConfig":"19"},{"size":2683,"mtime":1620369562401,"results":"28","hashOfConfig":"19"},{"size":4320,"mtime":1620381245377,"results":"29","hashOfConfig":"19"},{"size":3695,"mtime":1620539787902,"results":"30","hashOfConfig":"19"},{"size":0,"mtime":1620475221527,"results":"31","hashOfConfig":"19"},{"size":0,"mtime":1620475224419,"results":"32","hashOfConfig":"19"},{"size":0,"mtime":1620475217734,"results":"33","hashOfConfig":"19"},{"size":286,"mtime":1620539371268,"results":"34","hashOfConfig":"19"},{"size":2403,"mtime":1620528297002,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"3j80vq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/index.js",[],["76","77"],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/App.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/store.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/router/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/reducers/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/actions/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/loadingbar.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Auth/index.jsx",["78","79","80"],"import React, { useState } from \"react\";\nimport githubIcon from \"./github.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { validateValue } from \"container/common/utils\";\nimport { loginService, signUpService } from \"redux/services\";\nimport { useHistory, useParams } from \"react-router\";\nconst AuthScreen = () => {\n  const [userInfo, setUserInfo] = useState({\n    lastName: \"\",\n    firstName: \"\",\n    email: \"\",\n    password: \"\", \n  });\n  const [verify, setVerify] = useState({\n    email: false,\n    password: false,\n  });\n  const [errMess, setErrMess] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { type, from } = useParams();\n  const handleChange = (event) => {\n    setUserInfo({\n      ...userInfo,\n      [event.target.name]: event.target.value,\n    });\n    checkVerify(event);\n  };\n  const submitAuth = (e) => {\n    e.preventDefault();\n    let body = {\n      email: userInfo.email,\n      password: userInfo.password,\n      callback: (success) => {\n        if (success === true) {\n          if (from) {\n            history.push(`/forum/${from}`);\n          } else {\n            history.push(\"/welcome\");\n          }\n        } else {\n          setErrMess(success);\n        }\n      },\n    };\n    if (type === \"sign-in\") {\n      dispatch(loginService(body));\n    } else if (type === \"sign-up\") {\n      body.last_name = userInfo.lastName;\n      body.first_name = userInfo.firstName;\n      dispatch(signUpService(body));\n    }\n  };\n  const checkVerify = (event) => {\n    let test = validateValue(event.target.value, event.target.name);\n    setVerify({\n      ...verify,\n      [event.target.name]: test,\n    });\n  };\n  return (\n    <div className=\"cs-auth\">\n      <h2>CS Technology</h2>\n      <div className=\"container\" id=\"container\">\n        <div\n          className=\"form-container sign-in-container\"\n          hidden={type === \"sign-in\"}\n        >\n          <form>\n            <h1>Create Account</h1>\n            <div className=\"social-container\">\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n            </div>\n            <span>or use your email for registration</span>\n            <input type=\"text\" placeholder=\"Name\" />\n            <input type=\"email\" placeholder=\"Email\" />\n            <input type=\"password\" placeholder=\"Password\" />\n            <button>Sign Up</button>\n          </form>\n        </div>\n        <div\n          className=\"form-container sign-in-container\"\n          hidden={type === \"sign-up\"}\n        >\n          <form>\n            <h1>Sign in</h1>\n            <div className=\"social-container\">\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n              <a href=\"/\" className=\"social\">\n                <img src={githubIcon} alt=\"\" />\n              </a>\n            </div>\n            <span>or use your account</span>\n            <input type=\"email\" placeholder=\"Email\" />\n            <input type=\"password\" placeholder=\"Password\" />\n            <a href=\"/\">Forgot your password?</a>\n            <button>Sign In</button>\n          </form>\n        </div>\n        <div className=\"overlay-container\">\n          <div className=\"overlay\">\n            {type === \"sign-in\" ? (\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Hello, Friend!</h1>\n                <p>Enter your personal details and start journey with us</p>\n                <button\n                  className=\"ghost\"\n                  id=\"signUp\"\n                  onClick={() => history.push(\"/auth/sign-up\")}\n                >\n                  Sign Up\n                </button>\n              </div>\n            ) : (\n              <div className=\"overlay-panel overlay-right\">\n                <h1>Welcome Back!</h1>\n                <p>\n                  To keep connected with us please login with your personal info\n                </p>\n                <button\n                  className=\"ghost\"\n                  id=\"signIn\"\n                  onClick={() => history.push(\"/auth/sign-in\")}\n                >\n                  Sign In\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthScreen;\n","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/utils.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/redux/services/index.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/common/callApi.js",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/index.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/Conversations.jsx",[],["81","82"],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/User.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/screens/Chat/components/ChatBox.jsx",["83"],"import { Grid, Paper } from '@material-ui/core'\nimport React from 'react'\n\nconst ChatBox = () => {\n    return (\n        <Grid className=\"cs-chat-box\" container>\n            <h1>ddd</h1>\n        </Grid>\n    )\n}\n\nexport default ChatBox\n","/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Element.jsx",[],"/home/phucvinh/Documents/CODE/CS/cs-social-blog/src/container/layout/Editor.jsx",["84"],"import React, { useRef, useState } from \"react\";\nimport { AtomicBlockUtils, Editor, EditorState } from \"draft-js\";\nimport { RichUtils } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\nfunction CSEditor() {\n  const editorRef = useRef();\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const focus = () => {\n    editorRef.current.focus();\n  };\n  const onBoldClick = (e) => {\n    e.preventDefault(); // Mình dùng preventDefault() để giữ con trỏ chuột vẫn còn ở trong editor nhé các bạn\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"BOLD\"));\n  };\n  const addImage = (e) => {\n    e.preventDefault();\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      \"image\",\n      \"IMMUTABLE\",\n      {\n        src:\n          \"https://scontent.fhan3-1.fna.fbcdn.net/v/t1.6435-9/56907659_393365341245567_78934828816269312_n.jpg?_nc_cat=109&ccb=1-3&_nc_sid=09cbfe&_nc_ohc=OhJYeQMwLewAX8OikWm&_nc_ht=scontent.fhan3-1.fna&oh=4a8097bdfcd522dff035ce6983af527c&oe=60BC6747\",\n      }\n    );\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n    setEditorState(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n  };\n\n  // Tiến hành render Image component trong editor\n  const Image = ({ contentState, block }) => {\n    const entity = contentState.getEntity(block.getEntityAt(0));\n    const { src } = entity.getData();\n    console.log(src);\n    return <img src={src} />;\n  };\n\n  function mediaBlockRenderer(block) {\n    if (block.getType() === \"atomic\") {\n      return {\n        component: Image,\n        editable: false,\n      };\n    }\n\n    return null;\n  }\n  return (\n    <div className=\"cs-editor\" onClick={focus}>\n      <span onMouseDown={onBoldClick}>Bold</span>\n      <button onClick={addImage}>img</button>\n      <Editor\n        blockRendererFn={mediaBlockRenderer}\n        ref={editorRef}\n        editorState={editorState}\n        onChange={setEditorState}\n      />\n      <div className=\"cs-editor-tool\">\n      <i class=\"fi-rr-bold\"></i>\n      <i class=\"fi-rr-italic\"></i>\n      <i class=\"fi-rr-underline\"></i>\n      <i class=\"fi-rr-list\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default CSEditor;\n",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":18,"column":10,"nodeType":"93","messageId":"94","endLine":18,"endColumn":17},{"ruleId":"91","severity":1,"message":"95","line":22,"column":9,"nodeType":"93","messageId":"94","endLine":22,"endColumn":21},{"ruleId":"91","severity":1,"message":"96","line":29,"column":9,"nodeType":"93","messageId":"94","endLine":29,"endColumn":19},{"ruleId":"87","replacedBy":"97"},{"ruleId":"89","replacedBy":"98"},{"ruleId":"91","severity":1,"message":"99","line":1,"column":16,"nodeType":"93","messageId":"94","endLine":1,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":42,"column":12,"nodeType":"102","endLine":42,"endColumn":29},{"ruleId":"87","replacedBy":"103"},{"ruleId":"89","replacedBy":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'errMess' is assigned a value but never used.","Identifier","unusedVar","'handleChange' is assigned a value but never used.","'submitAuth' is assigned a value but never used.",["105"],["106"],"'Paper' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["105"],["106"],"no-global-assign","no-unsafe-negation"]